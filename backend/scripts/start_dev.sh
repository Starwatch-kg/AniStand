#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–µ—Å–∫–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è AniStand

echo "üéå Starting AniStand Development Environment..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  .env file not found. Creating from example..."
    cp .env.example .env
    echo "‚úÖ Please edit .env file with your settings"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -d "venv" ]; then
    echo "üì¶ Creating virtual environment..."
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üîß Activating virtual environment..."
source venv/bin/activate

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üìö Installing dependencies..."
pip install -r requirements.txt

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è  Checking database connection..."
python -c "
import asyncio
from app.database import engine
async def check_db():
    try:
        async with engine.begin() as conn:
            print('‚úÖ Database connection successful')
    except Exception as e:
        print(f'‚ùå Database connection failed: {e}')
        print('üí° Make sure PostgreSQL is running and DATABASE_URL is correct')
        exit(1)
asyncio.run(check_db())
"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis
echo "üî¥ Checking Redis connection..."
python -c "
import asyncio
from app.services.cache_service import cache_service
async def check_redis():
    try:
        await cache_service.connect()
        print('‚úÖ Redis connection successful')
        await cache_service.disconnect()
    except Exception as e:
        print(f'‚ö†Ô∏è  Redis connection failed: {e}')
        print('üí° Redis is optional but recommended for caching')
asyncio.run(check_redis())
"

# –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîÑ Running database migrations..."
alembic upgrade head

# –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
read -p "üå± Do you want to seed the database with sample data? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üå± Seeding database..."
    python scripts/init_db.py
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
echo "üöÄ Starting FastAPI development server..."
echo "üìñ API Documentation will be available at:"
echo "   - Swagger UI: http://localhost:8000/docs"
echo "   - ReDoc: http://localhost:8000/redoc"
echo "   - Health Check: http://localhost:8000/health"
echo ""
echo "üõë Press Ctrl+C to stop the server"
echo ""

uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
